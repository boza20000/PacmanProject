#pragma once
#include "Settings.h"

const size_t wallsIncl = 2;
const char pacmanSymbol = 'P';
const char* yellowColor = "\033[33m";
int pacmanX, pacmanY;
size_t playerScore = 0;
bool isGoingLeft = false;
bool isGoingRight = false;
bool isGoingUp = false;
bool isGoingDown = false;
const char blinkySymbol = 'B';
const size_t blinkyNumber = 0;
const char* redColor = "\033[31m";
const size_t scoreToActivtRed = 0;
int redLastX = -1;
int redLastY = -1;
const char pinkySymbol = 'Y';
const size_t pinkyNumber = 1;
const char* pinkColor = "\033[35m";
const size_t scoreToActivtPink = 20;
int pinkLastX = -1;
int pinkLastY = -1;
const char wallSymbol = '#';
const char foodSymbol = '@';
const char pointSymbol = '.';
const char emptySymbol = ' ';
char** grid = nullptr;
int widthGrid = 0, heightGrid = 0;
const char clydeSymbol = 'C';
const size_t clydeNumber = 3;
const char* greenColor = "\033[32m";
const size_t scoreToActivtGreen = 60;
int greenLastX = -1;
int greenLastY = -1;
const size_t amountOfGhosts = 4;
const size_t foodAmount = 4;
const size_t prizeOfFood = 20;
const size_t prizeOfPoint = 1;
int ghostX[amountOfGhosts], ghostY[amountOfGhosts];
int foodX[foodAmount], foodY[foodAmount];
char lastSymbol[amountOfGhosts] = { ' ',' ',' ',' ' };
const char* blueColor = "\033[34m";
const char* endColor = "\033[0m";
size_t collectedAmountOfFood = 0;
size_t frightenedModeCount = 0;
bool isChaseMode = true;
bool isFrightenedMode = false;
bool cantMove = false;
const char inkySymbol = 'I';
const size_t inkyNumber = 2;
const char* cyanColor = "\033[36m";
const size_t scoreToActivtBlue = 40;
int blueLastX = -1;
int blueLastY = -1;
Ghost* redGhost = new RedGhost(redColor, { redLastX, redLastY }, blinkySymbol, scoreToActivtRed, blinkyNumber);
Ghost* pinkGhost = new PinkGhost(pinkColor, { pinkLastX, pinkLastY }, pinkySymbol, scoreToActivtPink, pinkyNumber);
Ghost* blueGhost = new BlueGhost(cyanColor, { blueLastX, blueLastY }, inkySymbol, scoreToActivtBlue, inkyNumber);
Ghost* greenGhost = new GreenGhost(greenColor, { greenLastX, greenLastY }, clydeSymbol, scoreToActivtGreen, clydeNumber);